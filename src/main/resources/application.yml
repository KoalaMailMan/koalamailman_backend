server:
  port: 8080
  servlet:
    encoding:
      charset: UTF-8
      force: true
      enabled: true
    forward-headers-strategy: framework #

app:
  oauth2:
    front-uri: ${FRONT_URI:https://ringdong.kr}
    back-uri: ${BACK_URI:https://ringdong.kr}
    domain: ${COOKIE_DOMAIN:ringdong.kr}

spring:
  application:
    name: koalamailman
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-name: Kakao
            scope:
              - profile_nickname
              - talk_message
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - name
              - email
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            client-name: Google
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - email
              - profile
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

  datasource:
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      jdbc:
        batch: 50
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect

  ai:
    openai:
      api-key: ${OPENROUTER_API_KEY}
      base-url: https://openrouter.ai/api
      chat:
        options:
          model: ${OPENROUTER_MODEL:mistralai/mistral-7b-instruct:free}

  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=5m

aws:
  region: ap-northeast-2
  access-key: ${AWS_ACCESS_KEY_ID}
  secret-key: ${AWS_SECRET_ACCESS_KEY}

mail:
  from: "ÏΩîÏïåÎùº Ïö∞Ï≤¥Î∂Ä <reminder@ringdong.kr>"
  fromName: "Koala Mailman"
  charset: "UTF-8"
  cta-uri: ${FRONT_URI:https://ringdong.kr}
  subject: "ÏΩîÏïåÎùº Ïö∞Ï≤¥Î∂ÄÍ∞Ä Ìé∏ÏßÄÎ•º Ï†ÑÌï¥Ïöî  üê®ü™Ω‚úâÔ∏èÔ∏è"
  logo-url: "https://ringdong.kr/assets/default_koala.png"
  hero-url: ""
  tip: "Ï§ëÏöîÌïú Í±¥ Í∫æÏù¥ÏßÄ ÏïäÎäî ÎßàÏùåÏûÖÎãàÎã§."

jwt:
  access:
    secret: ${JWT_SECRET}
    expiration: ${JWT_EXPIRATION:3600000}
  refresh:
    secret: ${JWT_SECRET}
    expiration: ${JWT_REFRESH_EXPIRATION:3600000}

management:
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      probes:
        enabled: true

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.orm.jdbc.bind: TRACE
    org.hibernate.type.descriptor.sql: TRACE